{"ast":null,"code":"// src/api.js\nimport mockData from'./mock-data';/**\r\n * \r\n * @param {*} events\r\n *\r\n * The following function should be in the \"api.js\" file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */export const extractLocations=events=>{const extractedLocations=events.map(event=>event.location);const locations=[...new Set(extractedLocations)];return locations;};/**\r\n * \r\n * This function will fetch the list of all events\r\n */export const getEvents=async()=>{return mockData;};","map":{"version":3,"names":["mockData","extractLocations","events","extractedLocations","map","event","location","locations","Set","getEvents"],"sources":["C:/Users/malav/OneDrive/CareerFoundry/Achievement4/meet/src/api.js"],"sourcesContent":["// src/api.js\r\n\r\nimport mockData from './mock-data';\r\n\r\n/**\r\n * \r\n * @param {*} events\r\n *\r\n * The following function should be in the \"api.js\" file.\r\n * This function takes an events array, then uses map to create a new array with only locations.\r\n * It will also remove all duplicates by creating another new array using the spread operator and spreading a Set.\r\n * The Set will remove all duplicates from the array.\r\n */\r\nexport const extractLocations = (events) => {\r\n    const extractedLocations = events.map((event) => event.location);\r\n    const locations = [...new Set(extractedLocations)];\r\n    return locations;\r\n  };\r\n\r\n/**\r\n * \r\n * This function will fetch the list of all events\r\n */\r\nexport const getEvents = async () => {\r\n  return mockData;\r\n};"],"mappings":"AAAA;AAEA,MAAO,CAAAA,QAAQ,KAAM,aAAa,CAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAC,gBAAgB,CAAIC,MAAM,EAAK,CACxC,KAAM,CAAAC,kBAAkB,CAAGD,MAAM,CAACE,GAAG,CAAEC,KAAK,EAAKA,KAAK,CAACC,QAAQ,CAAC,CAChE,KAAM,CAAAC,SAAS,CAAG,CAAC,GAAG,GAAI,CAAAC,GAAG,CAACL,kBAAkB,CAAC,CAAC,CAClD,MAAO,CAAAI,SAAS,CAClB,CAAC,CAEH;AACA;AACA;AACA,GACA,MAAO,MAAM,CAAAE,SAAS,CAAG,KAAAA,CAAA,GAAY,CACnC,MAAO,CAAAT,QAAQ,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}