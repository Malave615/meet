{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malav\\\\OneDrive\\\\CareerFoundry\\\\Achievement4\\\\meet\\\\src\\\\components\\\\CitySearch.js\",\n  _s = $RefreshSig$();\n// src/components/CitySearch.js\n\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CitySearch = ({\n  allLocations\n}) => {\n  _s();\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [query, setQuery] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const handleInputChanged = event => {\n    const value = event.target.value;\n    setQuery(value);\n    if (allLocations) {\n      const filteredLocations = Array.from(new Set(allLocations.filter(location => location.toUpperCase().includes(value.toUpperCase()))));\n      setSuggestions(filteredLocations);\n    }\n    setShowSuggestions(value.length > 0);\n  };\n  const handleItemClicked = event => {\n    const value = event.target.textContent;\n    setQuery(value);\n    setShowSuggestions(false); // to hide the list\n  };\n  useEffect(() => {\n    if (allLocations) {\n      setSuggestions(allLocations);\n    }\n  }, [allLocations]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"city-search\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"city\",\n      placeholder: \"Search for a city\",\n      value: query,\n      onFocus: () => setShowSuggestions(true),\n      onChange: handleInputChanged,\n      \"aria-label\": \"City Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), showSuggestions && suggestions.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"suggestions\",\n      children: [suggestions.map(suggestion =>\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/no-redundant-roles\n      _jsxDEV(\"li\", {\n        onClick: handleItemClicked,\n        role: \"listitem\",\n        children: suggestion\n      }, suggestion, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n      // eslint-disable-next-line react/jsx-no-comment-textnodes\n      ), /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: handleItemClicked,\n        role: \"listitem\",\n        children: /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"See all cities\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, 'See all cities', false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CitySearch, \"rrmpklBs0XLBiuJqTdFUI42u1cE=\");\n_c = CitySearch;\nexport default CitySearch;\nvar _c;\n$RefreshReg$(_c, \"CitySearch\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","CitySearch","allLocations","_s","showSuggestions","setShowSuggestions","query","setQuery","suggestions","setSuggestions","handleInputChanged","event","value","target","filteredLocations","Array","from","Set","filter","location","toUpperCase","includes","length","handleItemClicked","textContent","children","type","className","placeholder","onFocus","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","suggestion","onClick","role","_c","$RefreshReg$"],"sources":["C:/Users/malav/OneDrive/CareerFoundry/Achievement4/meet/src/components/CitySearch.js"],"sourcesContent":["// src/components/CitySearch.js\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst CitySearch = ({ allLocations }) => {\r\n  const [showSuggestions, setShowSuggestions] = useState(false);\r\n  const [query, setQuery] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n\r\n  const handleInputChanged = (event) => {\r\n    const value = event.target.value;\r\n    setQuery(value);\r\n\r\n    if (allLocations) {\r\n      const filteredLocations = Array.from(new Set(\r\n        allLocations.filter((location) =>\r\n          location.toUpperCase().includes(value.toUpperCase())\r\n        )\r\n      ));\r\n      setSuggestions(filteredLocations);\r\n    }\r\n    \r\n    setShowSuggestions(value.length > 0);\r\n  };\r\n\r\n  const handleItemClicked = (event) => {\r\n    const value = event.target.textContent;\r\n    setQuery(value);\r\n    setShowSuggestions(false); // to hide the list\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (allLocations) {\r\n      setSuggestions(allLocations);\r\n    }\r\n  }, [allLocations]);\r\n\r\n  return (\r\n    <div data-testid=\"city-search\">\r\n      <input\r\n        type=\"text\"\r\n        className=\"city\"\r\n        placeholder=\"Search for a city\"\r\n        value={query}\r\n        onFocus={() => setShowSuggestions(true)}\r\n        onChange={handleInputChanged}\r\n        aria-label=\"City Search\"\r\n      />\r\n      {showSuggestions && suggestions.length > 0 && (\r\n        <ul className=\"suggestions\">\r\n          {suggestions.map((suggestion) => (\r\n            // eslint-disable-next-line jsx-a11y/no-redundant-roles\r\n            <li onClick={handleItemClicked} key={suggestion} role=\"listitem\">{suggestion}</li>\r\n          // eslint-disable-next-line react/jsx-no-comment-textnodes\r\n          ))}\r\n          <li key='See all cities' onClick={handleItemClicked} role=\"listitem\">\r\n            <b>See all cities</b>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n };\r\n\r\nexport default CitySearch;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}